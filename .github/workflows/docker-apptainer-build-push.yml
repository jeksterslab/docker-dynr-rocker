name: Docker and Apptainer Build and Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Set the environment variables
        run: echo "NOW=$( date '+%F-%H%M%S%2N' )" >> $GITHUB_ENV
      -
        name: Checkout 
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Docker build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}:latest, ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}:${{ env.NOW }}
      -
        name: Set up Apptainer
        uses: eWaterCycle/setup-apptainer@v2
        with:
          apptainer-version: 1.1.9
      -
        name: Build Apptainer container
        run: apptainer build ${{ secrets.DOCKER_HUB_CONTAINER }}.sif docker://${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_CONTAINER }}:${{ env.NOW }}
      -
        name: Run Apptainer container
        run: |
          apptainer exec ${{ secrets.DOCKER_HUB_CONTAINER }}.sif cat /etc/os-release
          apptainer exec ${{ secrets.DOCKER_HUB_CONTAINER }}.sif cat /srv/build/CONTAINER_RELEASE_MSG > release.txt
      -
        name: Upload Singularity Image File
        uses: actions/upload-artifact@v3
        with:
          name: ${{ secrets.DOCKER_HUB_CONTAINER }}.sif
          path: ./${{ secrets.DOCKER_HUB_CONTAINER }}.sif
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ secrets.DOCKER_HUB_CONTAINER }}.sif
      -
        name: Test artifact download
        run: ls -R
      -
        name: Zip artifact
        uses: thedoctor0/zip-release@0.7.1
        with:
          filename: ${{ secrets.DOCKER_HUB_CONTAINER }}.zip
          exclusions: '*.git* *.md *.txt Dockerfile /src/*'
      - 
        name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NOW }}
          release_name: sif-${{ env.NOW }}
          body_path: ./release.txt
          draft: false
          prerelease: false
      - 
        name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ secrets.DOCKER_HUB_CONTAINER }}.zip
          asset_name: sif-${{ env.NOW }}.zip
          asset_content_type: application/zip
